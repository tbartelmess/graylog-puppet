#! /bin/sh
### BEGIN INIT INFO
# Provides:          Graylog2
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts Graylog2
# Description:       Starts Graylog2 using start-stop-daemon
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

CONFIG_FILE=<%= scope['graylog::server::config_file'] %>
NOHUP=`which nohup`
JAVA=`which java`
LOG_FILE=<%= scope['graylog::server::logfile'] %>
JAR=<%= scope['graylog::server::jar_file'] %>
PIDFILE=<%= scope['graylog::server::pidfile'] %>
LOCKFILE=<%= scope['graylog::server::lockfile'] %>
USER=<%= scope['graylog::server::user'] %>
start() {
  echo -n "Starting graylog2"
  __pids_var_run "$JAVA" "$PIDFILE"
  if [[ $? == 0 ]]; then
    echo " ... already running"
    return
  fi
  runuser -s /bin/bash $USER -c "$JAVA -jar $JAR -f $CONFIG_FILE -p $PIDFILE >>$LOG_FILE &"
  STARTED=false
  for i in $(seq 1 30)
  do
    curl http://<%= scope['graylog::server::rest_listen_uri'] %> &> /dev/null
    if [[ $? == 0 ]]; then
      STARTED=true
      break
    fi
    sleep 1
  done
  if [[ $STARTED == true ]]; then
    echo_success
  else
    echo_failure
  fi
  echo
  RETVAL=$?
	[ $RETVAL = 0 ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  echo -n "Stopping graylog2"
  killproc -p $PIDFILE $JAVA
  RETVAL=$?
  echo
  [ $RETVAL = 0 ] && rm -f $LOCKFILE $PIDFILE
}

rh_status() {
  status -p $PIDFILE $JAVA
  RETVAL=$?
}

case "$1" in
  start)
		start
		;;
  stop)
		stop
		;;
  restart)
		stop
		sleep 1
		start
    ;;
  status)
    rh_status
    ;;
  *)
		N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart}" >&2
		exit 1
		;;
esac

exit $RETVAL

# vim:ft=sh
